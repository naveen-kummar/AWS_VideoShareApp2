{"version":3,"file":"db.js","sourceRoot":"","sources":["../../lib/db.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,8DAA0D;AAC1D,wDAA2E;AAI3E,MAAa,EAAE;IAIX,YACY,MAGX;QAHW,WAAM,GAAN,MAAM,CAGjB;QAEG,IAAI,CAAC,MAAM,GAAG,qCAAsB,CAAC,IAAI,CAAC,IAAI,gCAAc,CAAC;YACzD,MAAM,EAAG,IAAI,CAAC,MAAM,CAAC,MAAM;SAC9B,CAAC,EAAE;YACA,eAAe,EAAG;gBACd,qBAAqB,EAAG,IAAI;aAC/B;SACJ,CACJ,CAAC;IACF,CAAC;IACK,IAAI,CAAC,GAAS;;YAEf,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,yBAAU,CAAC;gBACpC,SAAS,EAAG,IAAI,CAAC,MAAM,CAAC,SAAS;gBACjC,IAAI,EAAG,GAAG;aACZ,CAAC,CAAC,CAAA;QACR,CAAC;KAAA;CACJ;AA1BD,gBA0BC","sourcesContent":["import { DynamoDBClient } from \"@aws-sdk/client-dynamodb\";\r\nimport { PutCommand, DynamoDBDocumentClient } from \"@aws-sdk/lib-dynamodb\";\r\n\r\n\r\n\r\nexport class DB{\r\n\r\n    private client: DynamoDBDocumentClient;\r\n\r\n    constructor(\r\n        private config: {\r\n        tableName: string;\r\n        region: string;\r\n    }\r\n) {\r\n        this.client = DynamoDBDocumentClient.from(new DynamoDBClient({\r\n            region : this.config.region,\r\n        }), {\r\n            marshallOptions : {\r\n                removeUndefinedValues : true,\r\n            },\r\n        }\r\n    );\r\n    }\r\n    async save(doc : any) {\r\n\r\n         return this.client.send(new PutCommand({\r\n            TableName : this.config.tableName,\r\n            Item : doc,\r\n         }))\r\n    }\r\n}"]}